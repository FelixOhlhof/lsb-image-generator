########### Global Settings ###########  
# Settings can also be overwritten in each task section
[Settings]
run_tasks_multithreaded=true
run_iterators_multithreaded=true
command_agent=standard
report_agent=standard

# Specifies the module name and the base command to execute the specified module.
[Modules]
LSBSteg=python .\modules\LSB-Steganography\LSBSteg.py

########### Variables ###########  
# Global variables:
# [$date] -> returns given date in system format
# [$datetime] -> returns given datetime in system format
# [$current_task_name] -> the name of the current task
# [$module_cmd:module_name] -> retrieves the base command to execute the specified module (e.g. python ...\LSBSteg.py)


########### Iterators ###########  
# Iterators can also have variables, e.g. current_file_name of the $Path iterator.
# If you want to use multible iterators of the same type in one command specify the count behind the iterators name (e.g. [$Path1:...], [$Path2:...])
# So that you can use the corresponding variables of each iterator in different places (e.g. [$Path1.current_file_path])
# The vairable [$ITERATOR.current_value] can be used in any iterator
# [$Path:PATH_COMES_HERE] -> iterates over all files of given path
# -> [$Path.current_file_path] -> current file path
# -> [$Path.current_file_name] -> current file name
# [$Integer:1;10;1] -> iterates over a range. args:start, max, step
# -> [$Integer.current_value] -> current value


########### This is the task section ###########  
# Specifiy first a task name in square brackets, you can also use the task name as variable.
# One or more commands can be specified in a task section. 
# You can use iterators and variables in a command as parameter. 
# Be careful with multible iterators in a single command since they will increase the number of executions exponentially.


[MyTask 1]
command=[$module_cmd:LSBSteg] encode -i [$Path1:.\data\test] -o .\data\output\[$Path1.current_file_name] -f [$Path2:.\data\secrets]
report=

[MyTask 2]
command=[$module_cmd:LSBSteg] encode -i [$Path1:.\data\test] -o .\data\output\[$Path1.current_file_name] -f [$Path2:.\data\secrets]
report=
